// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



  model User {
    id        Int        @id @default(autoincrement())
    nom       String
    postnom   String?
    email     String     @unique
    password  String
    role      Role       @default(SECRETAIRE)
    createdAt DateTime   @default(now())
    Document  Document[]
    Audit     Audit[]
  }
  
  enum Role {
    ADMIN
    SECRETAIRE
  }
  model Owner {
    id          Int        @id @default(autoincrement())
    nom         String
    description String?
    createdAt   DateTime   @default(now())
    Document    Document[]
  }
  
  model Folder {
    id          Int         @id @default(autoincrement())
    titre       String      @unique
    description String?
    createdAt   DateTime    @default(now())
    SubFolder   SubFolder[]
  }
  
  model SubFolder {
    id          Int        @id @default(autoincrement())
    titre       String     @unique
    description String?
    createdAt   DateTime   @default(now())
    folders     Folder     @relation(fields: [idFolder], references: [id])
    idFolder    Int
    Document    Document[]
  }
  
  model Document {
    id          Int        @id @default(autoincrement())
    name        String     @unique
    path        String     @unique
    description String?
    type        String
    createdAt   DateTime   @default(now())
    users       User       @relation(fields: [idUser], references: [id])
    idUser      Int
    owners      Owner      @relation(fields: [idOwner], references: [id])
    idOwner     Int
    Audit       Audit[]
    SubFolder   SubFolder? @relation(fields: [subFolderId], references: [id])
    subFolderId Int?
    annee       Annee?      @relation(fields: [idAnnee], references: [id])
    idAnnee     Int?
  }
  
  model Audit {
    id           Int       @id @default(autoincrement())
    manipulation String?
    openAt       DateTime  @default(now())
    users        User      @relation(fields: [idUser], references: [id])
    idUser       Int
    Document     Document? @relation(fields: [documentId], references: [id])
    documentId   Int?
  }

  model Annee {
    id          Int         @id @default(autoincrement())
    debut       DateTime    @unique
    fin         DateTime    @unique
    isEnCours   Int         @default(0)
    isFinished  Int         @default(0)
    createdAt   DateTime    @default(now())
    Document    Document[]
  }